{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/home.service\";\nimport * as i2 from \"@agm/core\";\nimport * as i3 from \"../services/city-data.service\";\nexport class HomeComponent {\n  constructor(home, mapsAPILoader, cityDataService, cdr) {\n    this.home = home;\n    this.mapsAPILoader = mapsAPILoader;\n    this.cityDataService = cityDataService;\n    this.cdr = cdr;\n    this.title = 'My first AGM project';\n    this.lat = 47.36991229592861;\n    this.lng = 8.522110574370004;\n  }\n  ngOnInit() {\n    this.getData();\n    this.postData();\n    this.loadGoogleMapsScript();\n    //this.fetchCityData();\n  }\n\n  getData() {\n    this.home.getData().subscribe(result => {\n      this.data = result;\n      console.log(this.data);\n    });\n  }\n  // Example POST operation\n  postData() {\n    const newData = {\n      Name: 'Davor'\n    };\n    this.home.postData(newData).subscribe(() => {\n      console.log('Data inserted successfully');\n      // Optionally, fetch updated data after insertion\n      this.getData();\n    }, error => {\n      console.error('Error inserting data:', error);\n    });\n  }\n  loadGoogleMapsScript() {\n    this.mapsAPILoader.load().then(() => {\n      this.initMap();\n    });\n  }\n  initMap() {\n    const directionsService = new google.maps.DirectionsService();\n    const directionsRenderer = new google.maps.DirectionsRenderer();\n    // Safely access the map element or provide a default value (e.g., document.body)\n    const mapElement = document.getElementById('map') || document.body;\n    const map = new google.maps.Map(mapElement, {\n      center: {\n        lat: this.lat,\n        lng: this.lng\n      },\n      zoom: 8\n    });\n    directionsRenderer.setMap(map);\n    // Example route from Sydney, Australia to Melbourne, Australia\n    // const request: google.maps.DirectionsRequest = {\n    //   origin: new google.maps.LatLng(this.lat, this.lng),\n    //   destination: new google.maps.LatLng(47.44159273798436, 8.625458252230352),\n    //   travelMode: 'DRIVING' as google.maps.TravelMode,\n    // };\n    // directionsService.route(request, (result: any, status: any) => {\n    //     if (status === 'OK') {\n    //       directionsRenderer.setDirections(result);\n    //       console.log(result);\n    //     } else {\n    //       console.error('Directions request failed with status:', status);\n    //     }\n    //   });\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HomeService), i0.ɵɵdirectiveInject(i2.MapsAPILoader), i0.ɵɵdirectiveInject(i3.CityDataService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"home\"]],\n    decls: 5,\n    vars: 5,\n    consts: [[\"id\", \"map\"], [3, \"latitude\", \"longitude\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"agm-map\", 1);\n        i0.ɵɵelement(4, \"agm-marker\", 1);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"latitude\", ctx.lat)(\"longitude\", ctx.lng);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"latitude\", 47.36991229592861)(\"longitude\", 8.522110574370004);\n      }\n    },\n    dependencies: [i2.AgmMap, i2.AgmMarker],\n    styles: [\"#map[_ngcontent-%COMP%] {\\n        height: 500px; \\n        width: 100%;   \\n        border: 1px solid #ccc; \\n        border-radius: 8px;     \\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); \\n      }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ob21lLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztNQUVNO1FBQ0UsYUFBYSxFQUFFLGdEQUFnRDtRQUMvRCxXQUFXLElBQUksNkRBQTZEO1FBQzVFLHNCQUFzQixFQUFFLHdDQUF3QztRQUNoRSxrQkFBa0IsTUFBTSxvREFBb0Q7UUFDNUUsdUNBQXVDLEVBQUUsc0NBQXNDO01BQ2pGIiwic291cmNlc0NvbnRlbnQiOlsiXG5cbiAgICAgICNtYXAge1xuICAgICAgICBoZWlnaHQ6IDUwMHB4OyAvKiBTZXQgdGhlIGRlc2lyZWQgaGVpZ2h0IG9mIHRoZSBtYXAgY29udGFpbmVyICovXG4gICAgICAgIHdpZHRoOiAxMDAlOyAgIC8qIE1ha2UgdGhlIG1hcCBjb250YWluZXIgdGFrZSB0aGUgZnVsbCB3aWR0aCBvZiBpdHMgcGFyZW50ICovXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7IC8qIEFkZCBhIGJvcmRlciBmb3IgdmlzdWFsIGRpc3RpbmN0aW9uICovXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDsgICAgIC8qIE9wdGlvbmFsOiBBZGQgYm9yZGVyLXJhZGl1cyBmb3Igcm91bmRlZCBjb3JuZXJzICovXG4gICAgICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTsgLyogT3B0aW9uYWw6IEFkZCBhIHN1YnRsZSBib3ggc2hhZG93ICovXG4gICAgICB9ICAgICAgXG4gICAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;AA4BA,OAAM,MAAOA,aAAa;EAMtBC,YAAmBC,IAAiB,EAAUC,aAA4B,EAASC,eAAgC,EACvGC,GAAsB;IADf,SAAI,GAAJH,IAAI;IAAuB,kBAAa,GAAbC,aAAa;IAAwB,oBAAe,GAAfC,eAAe;IACtF,QAAG,GAAHC,GAAG;IALf,UAAK,GAAG,sBAAsB;IAC9B,QAAG,GAAG,iBAAiB;IACvB,QAAG,GAAG,iBAAiB;EAMvB;EAEAC,QAAQ;IAEJ,IAAI,CAACC,OAAO,EAAE;IACd,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,oBAAoB,EAAE;IAC3B;EACJ;;EACAF,OAAO;IAEH,IAAI,CAACL,IAAI,CAACK,OAAO,EAAE,CAACG,SAAS,CAAEC,MAAM,IAAI;MACrC,IAAI,CAACC,IAAI,GAAGD,MAAM;MAClBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,IAAI,CAAC;IAC1B,CAAC,CAAC;EACJ;EACF;EACAJ,QAAQ;IAEJ,MAAMO,OAAO,GAAG;MAACC,IAAI,EAAE;IAAO,CAAC;IAC/B,IAAI,CAACd,IAAI,CAACM,QAAQ,CAACO,OAAO,CAAC,CAACL,SAAS,CAAC,MAAK;MACnCG,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzC;MACA,IAAI,CAACP,OAAO,EAAE;IAClB,CAAC,EACAU,KAAK,IAAI;MACNJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD,CAAC,CACJ;EACL;EAEAR,oBAAoB;IAChB,IAAI,CAACN,aAAa,CAACe,IAAI,EAAE,CAACC,IAAI,CAAC,MAAK;MAClC,IAAI,CAACC,OAAO,EAAE;IAChB,CAAC,CAAC;EACJ;EAEAA,OAAO;IACL,MAAMC,iBAAiB,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACC,iBAAiB,EAAE;IAC7D,MAAMC,kBAAkB,GAAG,IAAIH,MAAM,CAACC,IAAI,CAACG,kBAAkB,EAAE;IAE/D;IACA,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,IAAID,QAAQ,CAACE,IAAI;IAElE,MAAMC,GAAG,GAAG,IAAIT,MAAM,CAACC,IAAI,CAACS,GAAG,CAACL,UAAU,EAAE;MAC1CM,MAAM,EAAE;QAAEC,GAAG,EAAE,IAAI,CAACA,GAAG;QAAEC,GAAG,EAAE,IAAI,CAACA;MAAG,CAAE;MACxCC,IAAI,EAAE;KACP,CAAC;IAEFX,kBAAkB,CAACY,MAAM,CAACN,GAAG,CAAC;IAE9B;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;EAAC;qBA5EM/B,aAAa;EAAA;EAAA;UAAbA,aAAa;IAAAsC;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QAVlBC,0BAAI;QAAAA,YAAW;QAAAA,iBAAK;QACpBA,8BAAc;QAGVA,gCAAwF;QACxFA,iBAAU;;;QALVA,eAAW;QAAXA,+BAAW;QAEFA,eAAgB;QAAhBA,kCAAgB;QAEbA,eAA8B;QAA9BA,4CAA8B","names":["HomeComponent","constructor","home","mapsAPILoader","cityDataService","cdr","ngOnInit","getData","postData","loadGoogleMapsScript","subscribe","result","data","console","log","newData","Name","error","load","then","initMap","directionsService","google","maps","DirectionsService","directionsRenderer","DirectionsRenderer","mapElement","document","getElementById","body","map","Map","center","lat","lng","zoom","setMap","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Josip\\Desktop\\App\\client\\src\\app\\components\\home.component.ts"],"sourcesContent":["import { ChangeDetectorRef, Component } from '@angular/core';\nimport { HomeService } from '../services/home.service';\nimport { MapsAPILoader } from '@agm/core';\nimport { CityDataService } from '../services/city-data.service';\n\n@Component({\n    selector: 'home',\n    styles: [`\n\n      #map {\n        height: 500px; /* Set the desired height of the map container */\n        width: 100%;   /* Make the map container take the full width of its parent */\n        border: 1px solid #ccc; /* Add a border for visual distinction */\n        border-radius: 8px;     /* Optional: Add border-radius for rounded corners */\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Optional: Add a subtle box shadow */\n      }      \n    `],\n    template: `\n        <h1>{{ title }}</h1>\n        <div id=\"map\">\n            <agm-map [latitude]=\"lat\" [longitude]=\"lng\">\n            <!--<agm-marker *ngFor=\"let marker of this.cityDataService.markers\" [latitude]=\"marker.lat\" [longitude]=\"marker.lng\"></agm-marker>-->\n            <agm-marker [latitude]=\"47.36991229592861\" [longitude]=\"8.522110574370004\"></agm-marker>\n            </agm-map>\n        </div>\n        \n    `,\n})\nexport class HomeComponent \n{\n    title = 'My first AGM project';\n    lat = 47.36991229592861;\n    lng = 8.522110574370004;\n    data: any;\n    constructor(public home: HomeService, private mapsAPILoader: MapsAPILoader, public cityDataService: CityDataService,\n        private cdr: ChangeDetectorRef)\n    {\n\n    }\n\n    ngOnInit()\n    {\n        this.getData();\n        this.postData();\n        this.loadGoogleMapsScript();\n        //this.fetchCityData();\n    }\n    getData(): void \n    {\n        this.home.getData().subscribe((result) => {\n            this.data = result;\n            console.log(this.data);\n        });\n      }    \n    // Example POST operation\n    postData(): void \n    {\n        const newData = {Name: 'Davor'};\n        this.home.postData(newData).subscribe(() => {\n                console.log('Data inserted successfully');\n                // Optionally, fetch updated data after insertion\n                this.getData();\n            },\n            (error) => {\n                console.error('Error inserting data:', error);\n            }\n        );\n    }    \n\n    loadGoogleMapsScript() {\n        this.mapsAPILoader.load().then(() => {\n          this.initMap();\n        });\n      }\n    \n      initMap() {\n        const directionsService = new google.maps.DirectionsService();\n        const directionsRenderer = new google.maps.DirectionsRenderer();\n    \n        // Safely access the map element or provide a default value (e.g., document.body)\n        const mapElement = document.getElementById('map') || document.body;\n    \n        const map = new google.maps.Map(mapElement, {\n          center: { lat: this.lat, lng: this.lng },\n          zoom: 8\n        });\n    \n        directionsRenderer.setMap(map);\n    \n        // Example route from Sydney, Australia to Melbourne, Australia\n        // const request: google.maps.DirectionsRequest = {\n        //   origin: new google.maps.LatLng(this.lat, this.lng),\n        //   destination: new google.maps.LatLng(47.44159273798436, 8.625458252230352),\n        //   travelMode: 'DRIVING' as google.maps.TravelMode,\n        // };\n    \n        // directionsService.route(request, (result: any, status: any) => {\n        //     if (status === 'OK') {\n        //       directionsRenderer.setDirections(result);\n        //       console.log(result);\n        //     } else {\n        //       console.error('Directions request failed with status:', status);\n        //     }\n        //   });\n      }  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}