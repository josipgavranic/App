{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CityDataService {\n  constructor(http) {\n    this.http = http;\n    this.markers = [];\n  }\n  getCityData() {\n    return this.http.get('./assets/ZurichCity.txt');\n  }\n  fetchCityData() {\n    this.getCityData().subscribe(data => {\n      if (data && data.cities) {\n        this.processCityData(data.cities);\n      }\n    });\n  }\n  processCityData(cities) {\n    for (const city of cities) {\n      if (city.collecting_points) {\n        for (const collectingPoint of city.collecting_points) {\n          if (collectingPoint.lat && collectingPoint.lng) {\n            this.markers.push({\n              lat: collectingPoint.lat,\n              lng: collectingPoint.lng\n            });\n          }\n        }\n      }\n    }\n  }\n  static #_ = this.ɵfac = function CityDataService_Factory(t) {\n    return new (t || CityDataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CityDataService,\n    factory: CityDataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,eAAe;EAGxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADxB,YAAO,GAAU,EAAE;EACoB;EAEvCC,WAAW;IAEP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,yBAAyB,CAAC;EACnD;EAEAC,aAAa;IACX,IAAI,CAACF,WAAW,EAAE,CAACG,SAAS,CAAEC,IAAS,IAAI;MACzC,IAAIA,IAAI,IAAIA,IAAI,CAACC,MAAM,EAAE;QACvB,IAAI,CAACC,eAAe,CAACF,IAAI,CAACC,MAAM,CAAC;;IAErC,CAAC,CAAC;EACJ;EAEAC,eAAe,CAACD,MAAa;IAC3B,KAAK,MAAME,IAAI,IAAIF,MAAM,EAAE;MACzB,IAAIE,IAAI,CAACC,iBAAiB,EAAE;QAC1B,KAAK,MAAMC,eAAe,IAAIF,IAAI,CAACC,iBAAiB,EAAE;UACpD,IAAIC,eAAe,CAACC,GAAG,IAAID,eAAe,CAACE,GAAG,EAAE;YAC9C,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;cAChBH,GAAG,EAAED,eAAe,CAACC,GAAG;cACxBC,GAAG,EAAEF,eAAe,CAACE;aACtB,CAAC;;;;;EAKZ;EAAC;qBA/BQd,eAAe;EAAA;EAAA;WAAfA,eAAe;IAAAiB,SAAfjB,eAAe;IAAAkB,YAFZ;EAAM","names":["CityDataService","constructor","http","getCityData","get","fetchCityData","subscribe","data","cities","processCityData","city","collecting_points","collectingPoint","lat","lng","markers","push","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Josip\\Desktop\\App\\client\\src\\app\\services\\city-data.service.ts"],"sourcesContent":["// city-data.service.ts\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CityDataService \n{\n    markers: any[] = [];\n    constructor(private http: HttpClient) {}\n\n    getCityData(): Observable<any> \n    {\n        return this.http.get('./assets/ZurichCity.txt');\n    }\n\n    fetchCityData() {\n      this.getCityData().subscribe((data: any) => {\n        if (data && data.cities) {\n          this.processCityData(data.cities);\n        }\n      });\n    }\n\n    processCityData(cities: any[]) {\n      for (const city of cities) {\n        if (city.collecting_points) {\n          for (const collectingPoint of city.collecting_points) {\n            if (collectingPoint.lat && collectingPoint.lng) {\n              this.markers.push({\n                lat: collectingPoint.lat,\n                lng: collectingPoint.lng,\n              });\n            }\n          }\n        }\n      }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}