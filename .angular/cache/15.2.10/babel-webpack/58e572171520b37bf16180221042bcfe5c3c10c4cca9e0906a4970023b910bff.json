{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/rest.service\";\nexport class HomeService {\n  constructor(rest) {\n    this.rest = rest;\n    this.apiUrl = 'http://localhost:3000';\n    try {\n      this.connectToServer(this.connection);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  // Example GET operation\n  getData() {\n    const url = `${this.apiUrl}/getData`;\n    return this.restService.get(url).pipe(tap(data => console.log('Server response:', data)));\n  }\n  // Example POST operation\n  postData(data) {\n    const url = `${this.apiUrl}/postData`;\n    return this.rest.post(url, data);\n  }\n  // Example CONNECT operation\n  connectToServer(data) {\n    const url = `${this.apiUrl}/connect`;\n    return this.rest.connect(url, data);\n  }\n  static #_ = this.ɵfac = function HomeService_Factory(t) {\n    return new (t || HomeService)(i0.ɵɵinject(i1.RestService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HomeService,\n    factory: HomeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAIpBC,YAAmBC,IAAiB;IAAjB,SAAI,GAAJA,IAAI;IAFf,WAAM,GAAG,uBAAuB;IAIpC,IAAI;MACA,IAAI,CAACC,eAAe,CAAC,IAAI,CAACC,UAAU,CAAC;KACxC,CACD,OAAOC,GAAG,EAAE;MACRC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;;EAE1B;EAEA;EACAG,OAAO;IAEH,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,MAAM,UAAU;IACpC,OAAO,IAAI,CAACC,WAAW,CAACC,GAAG,CAAMH,GAAG,CAAC,CAACI,IAAI,CACtCC,GAAG,CAAEC,IAAI,IAAKT,OAAO,CAACU,GAAG,CAAC,kBAAkB,EAAED,IAAI,CAAC,CAAC,CACrD;EACP;EAEA;EACAE,QAAQ,CAACF,IAAS;IAEd,MAAMN,GAAG,GAAG,GAAG,IAAI,CAACC,MAAM,WAAW;IACrC,OAAO,IAAI,CAACR,IAAI,CAACgB,IAAI,CAAMT,GAAG,EAAEM,IAAI,CAAC;EACzC;EAEA;EACAZ,eAAe,CAACY,IAAS;IAErB,MAAMN,GAAG,GAAG,GAAG,IAAI,CAACC,MAAM,UAAU;IACpC,OAAO,IAAI,CAACR,IAAI,CAACiB,OAAO,CAAMV,GAAG,EAAEM,IAAI,CAAC;EAC5C;EAAC;qBAnCQf,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAoB,SAAXpB,WAAW;IAAAqB,YAFR;EAAM","names":["HomeService","constructor","rest","connectToServer","connection","err","console","error","getData","url","apiUrl","restService","get","pipe","tap","data","log","postData","post","connect","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Josip\\Desktop\\App\\client\\src\\app\\services\\home.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { RestService } from '../services/rest.service';\nimport { Observable } from 'rxjs';\n@Injectable({\n    providedIn: 'root'\n})\nexport class HomeService \n{\n    private apiUrl = 'http://localhost:3000';\n    private connection: any;\n    constructor(public rest: RestService)\n    {\n        try {\n            this.connectToServer(this.connection);\n        }\n        catch (err) {\n            console.error(err);\n        }\n    }\n\n    // Example GET operation\n    getData(): Observable<any> \n    {\n        const url = `${this.apiUrl}/getData`;\n        return this.restService.get<any>(url).pipe(\n            tap((data) => console.log('Server response:', data)),\n          );\n    }\n\n    // Example POST operation\n    postData(data: any): Observable<any> \n    {\n        const url = `${this.apiUrl}/postData`;\n        return this.rest.post<any>(url, data);\n    }\n\n    // Example CONNECT operation\n    connectToServer(data: any): Observable<any> \n    {\n        const url = `${this.apiUrl}/connect`;\n        return this.rest.connect<any>(url, data);\n    }    \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}