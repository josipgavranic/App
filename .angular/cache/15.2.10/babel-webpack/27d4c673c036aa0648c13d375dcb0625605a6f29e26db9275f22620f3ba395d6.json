{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@agm/core\";\nimport * as i2 from \"@angular/router\";\nexport class AppComponent {\n  constructor(mapsAPILoader) {\n    this.mapsAPILoader = mapsAPILoader;\n    this.title = 'My first AGM project';\n    this.lat = 47.36991229592861;\n    this.lng = 8.522110574370004;\n  }\n  ngOnInit() {\n    this.loadGoogleMapsScript();\n  }\n  loadGoogleMapsScript() {\n    this.mapsAPILoader.load().then(() => {\n      this.initMap();\n    });\n  }\n  initMap() {\n    const directionsService = new google.maps.DirectionsService();\n    const directionsRenderer = new google.maps.DirectionsRenderer();\n    const map = new google.maps.Map(document.getElementById('map'), {\n      center: {\n        lat: this.lat,\n        lng: this.lng\n      },\n      zoom: 8\n    });\n    directionsRenderer.setMap(map);\n    // Example route from Sydney, Australia to Melbourne, Australia\n    const request = {\n      origin: 'Sydney, Australia',\n      destination: 'Melbourne, Australia',\n      travelMode: 'DRIVING'\n    };\n    directionsService.route(this.request, (result, status) => {\n      if (status === 'OK') {\n        directionsRenderer.setDirections(result);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.MapsAPILoader));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 6,\n    vars: 5,\n    consts: [[3, \"latitude\", \"longitude\"], [\"id\", \"map\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"agm-map\", 0);\n        i0.ɵɵelement(3, \"agm-marker\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"div\", 1)(5, \"router-outlet\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"latitude\", ctx.lat)(\"longitude\", ctx.lng);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"latitude\", ctx.lat)(\"longitude\", ctx.lng);\n      }\n    },\n    dependencies: [i2.RouterOutlet, i1.AgmMap, i1.AgmMarker],\n    styles: [\"agm-map[_ngcontent-%COMP%] {\\n        height: 300px;\\n      }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hcHAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7SUFDSTtRQUNJLGFBQWE7TUFDZiIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgIGFnbS1tYXAge1xuICAgICAgICBoZWlnaHQ6IDMwMHB4O1xuICAgICAgfVxuICAgICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":";;;AAoBA,OAAM,MAAOA,YAAY;EAKrBC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IAJjC,UAAK,GAAG,sBAAsB;IAC9B,QAAG,GAAG,iBAAiB;IACvB,QAAG,GAAG,iBAAiB;EAKvB;EAEAC,QAAQ;IAEJ,IAAI,CAACC,oBAAoB,EAAE;EAC/B;EAGAA,oBAAoB;IAChB,IAAI,CAACF,aAAa,CAACG,IAAI,EAAE,CAACC,IAAI,CAAC,MAAK;MAClC,IAAI,CAACC,OAAO,EAAE;IAChB,CAAC,CAAC;EACJ;EAEAA,OAAO;IACL,MAAMC,iBAAiB,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACC,iBAAiB,EAAE;IAC7D,MAAMC,kBAAkB,GAAG,IAAIH,MAAM,CAACC,IAAI,CAACG,kBAAkB,EAAE;IAE/D,MAAMC,GAAG,GAAG,IAAIL,MAAM,CAACC,IAAI,CAACK,GAAG,CAACC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,EAAE;MAC9DC,MAAM,EAAE;QAAEC,GAAG,EAAE,IAAI,CAACA,GAAG;QAAEC,GAAG,EAAE,IAAI,CAACA;MAAG,CAAE;MACxCC,IAAI,EAAE;KACP,CAAC;IAEFT,kBAAkB,CAACU,MAAM,CAACR,GAAG,CAAC;IAE9B;IACA,MAAMS,OAAO,GAAG;MACdC,MAAM,EAAE,mBAAmB;MAC3BC,WAAW,EAAE,sBAAsB;MACnCC,UAAU,EAAE;KACb;IAEDlB,iBAAiB,CAACmB,KAAK,CAAC,IAAI,CAACJ,OAAO,EAAE,CAACK,MAAW,EAAEC,MAAW,KAAI;MACjE,IAAIA,MAAM,KAAK,IAAI,EAAE;QACnBjB,kBAAkB,CAACkB,aAAa,CAACF,MAAM,CAAC;;IAE5C,CAAC,CAAC;EACJ;EAAC;qBA7CM5B,YAAY;EAAA;EAAA;UAAZA,YAAY;IAAA+B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QARrBC,0BAAI;QAAAA,YAAW;QAAAA,iBAAK;QACpBA,kCAA4C;QAC1CA,gCAA4D;QAC9DA,iBAAU;QACVA,yBAAoB;;;QAJhBA,eAAW;QAAXA,+BAAW;QACNA,eAAgB;QAAhBA,kCAAgB;QACXA,eAAgB;QAAhBA,kCAAgB","names":["AppComponent","constructor","mapsAPILoader","ngOnInit","loadGoogleMapsScript","load","then","initMap","directionsService","google","maps","DirectionsService","directionsRenderer","DirectionsRenderer","map","Map","document","getElementById","center","lat","lng","zoom","setMap","request","origin","destination","travelMode","route","result","status","setDirections","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Josip\\Desktop\\App\\client\\src\\app\\components\\app.component.ts"],"sourcesContent":["import { MapsAPILoader } from '@agm/core';\nimport { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n    selector: 'app-root',\n    styles: [`\n    agm-map {\n        height: 300px;\n      }\n    `],\n    template: `\n    <h1>{{ title }}</h1>\n    <agm-map [latitude]=\"lat\" [longitude]=\"lng\">\n      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\"></agm-marker>\n    </agm-map>\n    <div id=\"map\"></div>\n        <router-outlet></router-outlet>\n    `,\n})\nexport class AppComponent {\n    title = 'My first AGM project';\n    lat = 47.36991229592861;\n    lng = 8.522110574370004;\n\n    constructor(private mapsAPILoader: MapsAPILoader)\n    {\n\n    }\n\n    ngOnInit()\n    {\n        this.loadGoogleMapsScript();\n    }\n\n\n    loadGoogleMapsScript() {\n        this.mapsAPILoader.load().then(() => {\n          this.initMap();\n        });\n      }\n    \n      initMap() {\n        const directionsService = new google.maps.DirectionsService();\n        const directionsRenderer = new google.maps.DirectionsRenderer();\n    \n        const map = new google.maps.Map(document.getElementById('map'), {\n          center: { lat: this.lat, lng: this.lng },\n          zoom: 8\n        });\n    \n        directionsRenderer.setMap(map);\n    \n        // Example route from Sydney, Australia to Melbourne, Australia\n        const request = {\n          origin: 'Sydney, Australia',\n          destination: 'Melbourne, Australia',\n          travelMode: 'DRIVING'\n        };\n    \n        directionsService.route(this.request, (result: any, status: any) => {\n          if (status === 'OK') {\n            directionsRenderer.setDirections(result);\n          }\n        });\n      }    \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}